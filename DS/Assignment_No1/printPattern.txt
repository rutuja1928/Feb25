2. Dry run for n = 8. Whatâ€™s the number of iterations? Time complexity?
void printPattern(int n) {
 for (int i = 1; i <= n; i *= 2)
 for (int j = 0; j < n; j++)
 System.out.println(i + "," + j);
}


output

  i          j                       printPattern
  1    0,1,2,3,4,5,6,7     (1,0)(1,1)(1,2)(1,3)(1,4)(1,5)(1,6)(1,7)
  2    0,1,2,3,4,5,6,7     (2,0)(2,1)(2,2)(2,3)(2,4)(2,5)(2,6)(2,7)
  4    0,1,2,3,4,5,6,7     (4,0)(4,1)(4,2)(4,3)(4,4)(4,5)(4,6)(4,7)
  8    0,1,2,3,4,5,6,7     (8,0)(8,1)(8,2)(8,3)(8,4)(8,5)(8,6)(8,7)
  
  
  The first value (i) doubles in each outer loop iteration: 1, 2, 4, 8.

  The second value (j) goes from 0 to 7 for each i.
  
  total lines=32
  
  O(log n) for i loop
  O(n log n)    time complexity